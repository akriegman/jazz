// clang-format off
#include <linux/input.h>
#include <unordered_map>

#define SHIFT    0x1000
#define MASK_KEY 0x0fff

const std::unordered_map<int, int> J_PAGE = {
  {KEY_Q         , KEY_Q                 },
  {KEY_W         , KEY_J                 },
  {KEY_E         , KEY_MINUS      | SHIFT},
  {KEY_R         , KEY_EQUAL      | SHIFT},
  {KEY_T         , KEY_GRAVE      | SHIFT},
  {KEY_A         , KEY_Y                 },
  {KEY_S         , KEY_B                 },
  {KEY_D         , KEY_MINUS             },
  {KEY_F         , KEY_EQUAL             },
  {KEY_G         , KEY_GRAVE             },
  {KEY_Z         , KEY_Z                 },
  {KEY_X         , KEY_X                 },
  {KEY_C         , KEY_I                 },
  {KEY_V         , KEY_P                 },

  {KEY_I         , KEY_LEFTBRACE  | SHIFT},
  {KEY_O         , KEY_RIGHTBRACE | SHIFT},
  {KEY_P         , KEY_BACKSLASH  | SHIFT},
  {KEY_K         , KEY_9          | SHIFT},
  {KEY_L         , KEY_0          | SHIFT},
  {KEY_SEMICOLON , KEY_BACKSLASH         },
  {KEY_COMMA     , KEY_LEFTBRACE         },
  {KEY_DOT       , KEY_RIGHTBRACE        },
  {KEY_SLASH     , KEY_RIGHTSHIFT        },
};

const std::unordered_map<int, int> X_PAGE = {
  {KEY_Q         , KEY_Q},
  {KEY_W         , KEY_Q},
  {KEY_E         , KEY_Q},
  {KEY_R         , KEY_Q},
  {KEY_T         , KEY_Q},
  {KEY_A         , KEY_Q},
  {KEY_S         , KEY_Q},
  {KEY_D         , KEY_Q},
  {KEY_F         , KEY_Q},
  {KEY_G         , KEY_Q},
  {KEY_Z         , KEY_Q},
  {KEY_X         , KEY_Q},
  {KEY_C         , KEY_Q},
  {KEY_V         , KEY_Q},

  {KEY_U         , KEY_Q},
  {KEY_I         , KEY_Q},
  {KEY_O         , KEY_Q},
  {KEY_P         , KEY_Q},
  {KEY_LEFTBRACE , KEY_Q},
  {KEY_H         , KEY_Q},
  {KEY_J         , KEY_Q},
  {KEY_K         , KEY_Q},
  {KEY_L         , KEY_Q},
  {KEY_SEMICOLON , KEY_Q},
  {KEY_APOSTROPHE, KEY_Q},
  {KEY_N         , KEY_Q},
  {KEY_M         , KEY_Q},
  {KEY_COMMA     , KEY_Q},
  {KEY_DOT       , KEY_Q},
  {KEY_SLASH     , KEY_Q},
};

const std::unordered_map<int, int> Z_PAGE = {
  {KEY_Q         , KEY_Q},
  {KEY_W         , KEY_Q},
  {KEY_E         , KEY_Q},
  {KEY_R         , KEY_Q},
  {KEY_T         , KEY_Q},
  {KEY_A         , KEY_Q},
  {KEY_S         , KEY_Q},
  {KEY_D         , KEY_Q},
  {KEY_F         , KEY_Q},
  {KEY_G         , KEY_Q},
  {KEY_Z         , KEY_Q},
  {KEY_X         , KEY_Q},
  {KEY_C         , KEY_Q},
  {KEY_V         , KEY_Q},

  {KEY_U         , KEY_Q},
  {KEY_I         , KEY_Q},
  {KEY_O         , KEY_Q},
  {KEY_P         , KEY_Q},
  {KEY_LEFTBRACE , KEY_Q},
  {KEY_H         , KEY_Q},
  {KEY_J         , KEY_Q},
  {KEY_K         , KEY_Q},
  {KEY_L         , KEY_Q},
  {KEY_SEMICOLON , KEY_Q},
  {KEY_APOSTROPHE, KEY_Q},
  {KEY_N         , KEY_Q},
  {KEY_M         , KEY_Q},
  {KEY_COMMA     , KEY_Q},
  {KEY_DOT       , KEY_Q},
  {KEY_SLASH     , KEY_Q},
};

const std::unordered_map<int, int> Q_PAGE = {
  {KEY_Q         , KEY_Q},
  {KEY_W         , KEY_Q},
  {KEY_E         , KEY_Q},
  {KEY_R         , KEY_Q},
  {KEY_T         , KEY_Q},
  {KEY_A         , KEY_Q},
  {KEY_S         , KEY_Q},
  {KEY_D         , KEY_Q},
  {KEY_F         , KEY_Q},
  {KEY_G         , KEY_Q},
  {KEY_Z         , KEY_Q},
  {KEY_X         , KEY_Q},
  {KEY_C         , KEY_Q},
  {KEY_V         , KEY_Q},

  {KEY_U         , KEY_Q},
  {KEY_I         , KEY_Q},
  {KEY_O         , KEY_Q},
  {KEY_P         , KEY_Q},
  {KEY_LEFTBRACE , KEY_Q},
  {KEY_H         , KEY_Q},
  {KEY_J         , KEY_Q},
  {KEY_K         , KEY_Q},
  {KEY_L         , KEY_Q},
  {KEY_SEMICOLON , KEY_Q},
  {KEY_APOSTROPHE, KEY_Q},
  {KEY_N         , KEY_Q},
  {KEY_M         , KEY_Q},
  {KEY_COMMA     , KEY_Q},
  {KEY_DOT       , KEY_Q},
  {KEY_SLASH     , KEY_Q},
};

const std::unordered_map<int, std::unordered_map<int, int>> REALBOOK = {
    {KEY_J, J_PAGE},
    {KEY_X, X_PAGE},
    {KEY_Z, Z_PAGE},
    {KEY_Q, Q_PAGE},
};
// clang-format on